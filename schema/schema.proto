syntax = "proto3";
package bs;

option go_package = ".;schema";

message Subset {
  bytes ref  = 1;
  int32 size = 2;
}

// Set is a set of refs, represented as a tree.
// The shape of the tree is insensitive to the order of Add and Remove calls.
message Set {
  // Depth is the distance from the root of the tree.
  // The root has depth 0.
  // If there are subtrees,
  // then all members of the left subtree have bit `depth` set to 0,
  // and all members of the right subtree have bit `depth` set to 1.
  // (This allows the shape of the tree to be independent of the order in which members are added.)
  int32 depth = 1;

  // Mutually exclusive with members.
  Subset left  = 2;
  Subset right = 3;

  // Mutually exclusive with left and right.
  // Must be kept sorted.
  repeated bytes members = 4;

  // Size is the number of refs in this node plus any children.
  int32 size = 5;
}
